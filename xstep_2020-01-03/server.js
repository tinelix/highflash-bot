const Discord = require(`discord.js`);
const forEachTimeout = require('foreach-timeout');
const client = new Discord.Client();
const os = require('os');
const strftime = require('strftime')
const yt = require('ytdl-core')
const fs = require('fs');
const botconfig = require('./JSON/botconfig.json');
const data = require("./JSON/data.json");

let prefix_a = botconfig.prefix_a
let prefix_b = botconfig.prefix_b
let prefix_c = botconfig.prefix_c

var servers = {};
var prefix = botconfig.prefix
var blockid = "396331064710135809"
client.login(botconfig.token)


client.on('ready', () => {
			  try {
	process.stdout.write('\x1Bc');
    console.log(`Starting ${client.user.tag}...`);
    console.log("Loading JSON-modules...")
    console.log("Loading Voice Streamer...")
	console.log("Loading FS Component...")
	console.log("Loading Date/Time Format Component...")	
	console.log("Loading other components...")
	var timerId = setInterval(function() {
	process.stdout.write('\x1Bc');	
	  let randoman = client.guilds.random();
    console.log("\n ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\n      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà           ‚ñà‚ñà\n       ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n       ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n      ‚ñà‚ñà   ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n\nXStep Bot " + botconfig.version + " \(" + botconfig.date + "\)\n\(C\)opyright 2019-2020 DMIT Development. All rights reserved.\n\nThis script started successfully.")
	console.log("\nPing: " + client.ping.toFixed(2) + " ms | Memory usage: " + Math.round(process.memoryUsage().heapUsed / 1024) + " kB\nServers: " + client.guilds.size + " | Users: " + client.users.size)
    }, 2000);
	if(client.ping > 2000) {
		  client.user.setPresence({status: 'dnd'})
  .then(console.log)
  .catch(console.error);
}} catch(e) {
		console.log("\n ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà\n      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà           ‚ñà‚ñà\n       ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n       ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n      ‚ñà‚ñà   ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà\n\nXStep Bot " + botconfig.version + " \(" + botconfig.date + "\)\n\(C\)opyright 2019-2020 DMIT Development. All rights reserved.\n\nThis script started successfully.")
	console.log("No servers");
	}  
});

  var timerId = setInterval(function users() {
	  	var moscow = new Date().toLocaleString("en-US", { timeZone: "Europe/Moscow"})
   client.user.setPresence({
        game: {
      name: strftime("%H:%M", new Date(moscow)) + " (UTC+3)"}})
   timerId = setTimeout(function servers() {
   client.user.setPresence({
        game: {
   name: client.guilds.size + " servers | " + botconfig.prefix + "help"}})
    timerId = setTimeout(function clock() {
   client.user.setPresence({
        game: {
   name: client.users.size + " users | " + botconfig.prefix + "help"}})
    }, 6000)
    }, 4000)
}, 16000)

function emoji (id) {
	return client.emojis.get(id).toString();
	}

	var blockmsg_embed = {
   embed: {
color: 0xff0000,
author: {
     name: "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
	 },
    description: "–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –æ—Ç–∫–ª—é—á–∏–ª –í–∞–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ: *–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –≤ –æ—Ç–∑—ã–≤–µ*"
	}};

    client.on('guildCreate', (guild) => {
			  	  	var t_log = {
   embed: {
color: 0x55ff55,
author: {
     name: "Servers Log"
},
	 thumbnail: {
		url: guild.iconURL,
	 },
    description: "XStep Bot has joined the **" + guild.name + "** server! Now it has **" + client.guilds.size + "** servers. \:clap\: \:clap\:\nThanks!",
	   fields: [
      {
           name: "Server ID",
           value: guild.id
    },
       {
           name: "Channels | Members | Roles | Online",
           value: guild.channels.size + " ch. | " + guild.memberCount + " memb. | " + guild.roles.size + " roles | " + guild.presences.size + " online"
       },
    {
        name: "Onwer",
        value: guild.owner.user.tag + " \(" + guild.owner.user.id + "\)"
    },
	{
           name: "Created at",
           value: strftime('%d/%m/%Y %H:%M', new Date(guild.createdTimestamp))
    },
      ]
	}}
		var welcome_embed = {
        embed: {
            color: 0x4400ff,

            author: {
                name: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
                icon_url: client.user.avatarURL
            },
  description: ":wave: " + guild.owner + ", –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ —è –í–∞—Å –±–µ—Å–ø–æ–∫–æ–∏–ª, —Ö–æ—Ä–æ—à–æ?\n–Ø —Ä–∞–¥, —á—Ç–æ –í—ã –∏–ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –±–æ—Ç–∞ –Ω–∞ –í–∞—à —Å–µ—Ä–≤–µ—Ä! –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–∏—à–∏—Ç–µ `dm~help`.\n\n**–≠—Ç–æ –µ—â–µ –Ω–µ –≤—Å–µ!** –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π <@507540368443834374>, –ø–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `dm~donate`." 
					}
	}
		  client.channels.get("564022728143929370").send(t_log);})
		  
		      client.on('guildDelete', (guild) => {
			  	  	var t_log = {
   embed: {
color: 0xff0000,
author: {
     name: "Servers Log"
},
	 thumbnail: {
		url: guild.iconURL,
	 },
    description: "XStep Bot left, kicked out, banned from **" + guild.name + "** server! Now it has **" + client.guilds.size + "** servers. \nCan you explain to the bot author what you didn't like? :worried:",
	}}
		  client.channels.get("564022728143929370").send(t_log);})

client.on("ready", () => {
	process.stdout.write('\x1Bc'); 
	client.user.setGame("Starting XStep Bot...");

});



client.on("message", message => {
  if(message.author === client.user) return;
  if(message.content.startsWith(prefix + "test") || message.content.startsWith(prefix_a + "test") || message.content.startsWith(prefix_b + "test") || message.content.startsWith(prefix_c + "test")) {
	  	  	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
      const plaform = os.platform()
      if(os.platform() === 'win32') {
          platform = "<:OS_Windows8_10:629876943461810206> Windows" }
      else {
	         if(os.platform() === 'android') {
	         platform = "<:OS_Android:629884680673427476> Android —Å Termux"
             } else {
				      if(os.platform() === 'linux') {
						  platform = "<:OS_Linux:629885198820966420> Linux"
	  }}}
	var test_embed = {
   embed: {
color: 0xff9900,
author: {
     name: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞",
     icon_url: client.user.avatarURL
},
    description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –ù–∏–∫–∞–∫–∏—Ö –æ—à–∏–±–æ–∫ –ø–æ–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.",
   fields: [
      {
           name: "üíæ –†–∞–∑–º–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞",
           value: Math.round(process.memoryUsage().heapUsed / 1024) + " –∫–ë"
    },
       {
           name: "üèì –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
           value: client.ping.toFixed(2) + " –º—Å–µ–∫"
       },
       {
           name: "‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
           value: strftime('%H —á. %M –º–∏–Ω. %S —Å–µ–∫.', new Date(client.uptime - 25200000))
       },

    {
        name: "üõ† –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞",
        value: platform
    },
         {
            name: "üí° –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä",
            value: os.cpus()[0].model
         },
       {
         name: "üèò –ö–æ–ª-–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ / –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
         value: client.guilds.size + " / " + client.users.size
       }
      ]
   }
};
client.channels.get("564022728143929370").send(t_log);
message.channel.send(test_embed);
}});

  client.on('message', message => {
    if(message.author === client.user) return;
		  	   	  if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + 'about') || message.content.startsWith(prefix_a + "about") || message.content.startsWith(prefix_b + "about") || message.content.startsWith(prefix_c + "about")) {
			  	  	var t_log = {
   embed: {
color: 0x008800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  	  						  client.channels.get("564022728143929370").send(t_log);
		var about_embed = {
   embed: {
color: 0x0088ff,
author: {
     name: "–û –±–æ—Ç–µ XStep Bot",
     icon_url: client.user.avatarURL
},
   fields: [
      {
           name: "–í–µ—Ä—Å–∏—è",
           value: botconfig.version + " (" + botconfig.date + ")"
    },
       {
           name: "–ê–≤—Ç–æ—Ä/–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
           value: "`DMIT Computers#7004`"
       },
	{
        name: "–ò—Å—Ö–æ–¥–Ω—ã–µ –∫–æ–¥—ã",
        value: "https://github.com/dmitryevdev/xstepbot"
    },
    {
        name: "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞",
        value: "Copyright ¬© DMIT Computers, 2019-2020. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã."
    },
      ]
   }
};
message.channel.send(about_embed);
    }
  }});
  

client.on('message', message => {
	if (!message.guild) return;
    if (message.content.startsWith(prefix + 'mass-say ')) {
		if(message.author.id !== "484921597015359488") return;
        client.guilds.forEach(guild => {
            let channels = guild.channels.filter(channel => channel.type === 'text' && channel.permissionsFor(guild.members.get(client.user.id)).has('SEND_MESSAGES'));
            if (channels.size > 0) channels.first().send(message.content.split(" ").slice(1).join(" "));
        })
    }
});

client.on('message', message => {
  if (!message.guild) return;
  if (message.content.startsWith(prefix + 'ban') || message.content.startsWith(prefix_a + "ban") || message.content.startsWith(prefix_b + "ban") || message.content.startsWith(prefix_c + "ban")) {
	  	   	  if(message.channel.type === 'dm') return;
			  
		    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
    const user1 = message.mentions.users.first();
    const member = message.guild.member(user1);
		  let args = message.content.split(" " + member + " ").slice(1).join(" ")
		  			  console.log(args);
		var banerr3_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",

   }
};
		var banerr2_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä.",

   }
};
		var banerr1_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.ban <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–ø—Ä–∏—á–∏–Ω–∞>`",

   }
};
		var banerr4_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",

   }
};
					var bansucc_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + user1.tag,
                                         icon_url: client.user.avatarURL
                                       },
                            fields: [
                                       {
                                           name: "–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                           value: message.author.tag
                                       },
                                       {
                                           name: "–ü—Ä–∏—á–∏–Ω–∞",
                                           value: args
                                       },
      ]
   }
};
    if (user1) {
		if(message.member.hasPermission('ADMINISTRATOR')) {		  		
      if (member) {
        member.ban({
          reason: message.author.tag + ': ' + args,
        }).then(() => {
			message.channel.send(bansucc_embed);
		  		var ban_log = {
   embed: {
color: 0xff8800,
author: {
     name: message.author.tag,
     icon_url: client.user.avatarURL
},
    description: user1.tag + " banned by user " + message.author.tag,
		   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
   }
};

	  client.channels.get("564022728143929370").send(ban_log);
		})
        .catch(err => {
          message.channel.sendMessage(banerr4_embed);
          console.error(err);
        })
      } else { message.channel.sendMessage(banerr4_embed)  } } else {
        message.channel.sendMessage(banerr3_embed);
      }
    } else {
      message.channel.sendMessage(banerr1_embed);
    }
  }}
});


client.on('message', message => {
	if(message.channel.type === 'dm') return;
    if (message.content.startsWith(prefix + 'audio play ')) {
		if(!servers[message.guild.id]) servers[message.guild.id] = {
			queue: []
		};
			var server = servers[message.guild.id]
	server.queue.push(message.content.split(" play ").slice(1).join(" "));
	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: message.author.tag,
     icon_url: client.user.avatarURL
},
    description: message.author.tag + " listening to music from " + message.content.split(" play ").slice(1).join(" ") + " on **" + message.guild.name + "**",
	fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
   }
};
	var auderr1_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: ":no_entry_sign: " + message.author + ", –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!"
					}
	}
		var auderr2_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: ":no_entry_sign: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ " + message.content.split(" play ").slice(1).join(" ") + ". \n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–¥–Ω–µ–µ.\n–ï—Å–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Å—ã–ª–∫–µ, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å."
					}
	}

			var auderr4_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: ":no_entry_sign: –í–∏–¥–µ–æ (" + message.content.split(" play ").slice(1).join(" ") + ") –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 –º–∏–Ω—É—Ç."
					}
	}
		var audload_embed = {
        embed: {
            color: 0x4400ff,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: ":hourglass_flowing_sand: –ó–∞–≥—Ä—É–∑–∫–∞..."
					}
	}
						  const streamOptions = { bitrate: 80000 };
						  client.channels.get("564022728143929370").send(t_log);
   	 const voiceChannel = message.member.voiceChannel;
    if (!voiceChannel) {
      return message.channel.send(auderr1_embed);
    }
	    const valid = yt.validateURL(message.content.split(" play ").slice(1).join(" "));
    if (!valid) {
      return message.channel.send(auderr2_embed);	
    }
    voiceChannel.join()
      .then(connnection => {
		var server = servers[message.guild.id]
		message.channel.send(audload_embed).then(function (message) {
			var timerId = setInterval(function() {
				clearInterval(timerId);
                message.delete()
		}, 10000)}).catch(function() {
              //Something
             });
	    let stream = yt(server.queue[0], {
      format: "mp3", 
	  audioonly: true
        })
		server.queue.shift();
        const dispatcher = connnection.playStream(stream, streamOptions);
       dispatcher.on('end', () => {
			if(server.queue[0]) {
			server.dispatcher 
			return message.guild.voiceConnection.disconnect();
			};
       });
});
				yt.getInfo(message.content.split(" ").slice(1).join(" "), function(err, info) {
			var auderr2_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: ":no_entry_sign: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏ " + message.content.split(" play ").slice(1).join(" ") + ". \n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å —Å—Å—ã–ª–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–¥–Ω–µ–µ.\n–ï—Å–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å—Å—ã–ª–∫–µ, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –∞–¥—Ä–µ—Å."
					}
	}
			let information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
			let information_author = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
			let information_viewcount = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
			let information_published = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
				var timerId = setInterval(function() {
				clearInterval(timerId);
		if (err) { information = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)" 
		           information_author = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
				   information_viewcount = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
				   information_published = "(–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)"
				   } 
			else {
				   var strftimeRU = strftime.localizeByIdentifier('ru_RU')
   				   information = info.player_response.videoDetails.title 
				   information_author = info.player_response.videoDetails.author 
				   information_viewcount = info.player_response.videoDetails.viewCount 
				   information_published = strftimeRU('%d %B %Y –≥.', new Date(info.published))
				   }
		var audplay_embed = {
        embed: {
            color: 0x4400ff,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
		description: '‚ñ∂ ' + message.author + ": –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è **" + information + "** –Ω–∞ " + streamOptions.bitrate / 1000 + " kbps",
 	   fields: [
    {
           name: "–ê–≤—Ç–æ—Ä",
           value: information_author
    },
	{
		   name: "–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
		   value: information_viewcount
	},
	{
		   name: "–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",
		   value: information_published
	},
      ]
						}	
	}
message.channel.send(audplay_embed);
		}, 11000)})
    if (!voiceChannel) {
      return message.channel.send(auderr3_embed);
				}}
var urlyt = { url : message.content.split(" play ").slice(1).join(" ")};

fs.writeFile("json/data.json", JSON.stringify(urlyt), function(err) {
    if(err) {
        return console.log(err);
    }
})}); 



client.on('message', message => {
	if(message.channel.type === 'dm') return;
    if (message.content.startsWith(prefix + 'audio stop') || message.content.startsWith(prefix_a + "audio stop") || message.content.startsWith(prefix_b + "audio stop") || message.content.startsWith(prefix_c + "audio stop")) {
					  	  	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	var audleave_embed = {
        embed: {
            color: 0x4400ff,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: "‚èπ –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Ç. –∫. –±–æ—Ç XStep –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.\n\n–î–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞ –≤–≤–µ–¥–∏—Ç–µ `xs.audio play <—Å—Å—ã–ª–∫–∞>`."
		}
					};
    message.channel.send(audleave_embed);	
	var server = servers[message.guild.id]
	if (message.guild.voiceConnection) message.guild.voiceConnection.disconnect();		
}});

client.on('message', message => {
	if(message.channel.type === 'dm') return;
    if (message.content.startsWith(prefix + 'warn') || message.content.startsWith(prefix_a + "warn") || message.content.startsWith(prefix_b + "warn") || message.content.startsWith(prefix_c + "warn")) {
try {
let profile = require("./JSON/profile.json");
		var warnerr1_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.warn <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ> <–∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞—Ä–Ω–æ–≤> <–ø—Ä–∏—á–∏–Ω–∞>`",

   }
};
		var warnerr2_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä.",

   }
};
		var warnerr3_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",

   }
};
		var warnerr4_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",

   }
};
	  let member1 = message.guild.member(message.mentions.users.first()) || message.guild.members.get(args[0])
          let gchannel = message.mentions.channels.first();
          let gchannel1 = message.guild.channels.find(t => t.id == gchannel.id);
          let args = message.content.split(" " + member1 + " " + gchannel1 + " ").slice(1).join(" ")
          const memberActions = message.guild.member(member1);          
          if(message.member.hasPermission("ADMINISTRATOR")) {
          if(args) {
          if(member1) {
          if(gchannel1) {
          if(!profile[member1.id]){
             profile[member1.id] = {
                   warns: 0,
                 }}
             fs.writeFile("./JSON/profile.json",JSON.stringify(profile),(err)=>{
             if(err) console.log(err);
          });

          profile[member1.id].warns++;
          fs.writeFile("./JSON/profile.json",JSON.stringify(profile),(err)=>{
                   if(err) console.log(err);
          });
					var bansucc_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                                         icon_url: client.user.avatarURL
                                       },
                            fields: [
                                       {
                                           name: "–ó–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                           value: client.user.tag
                                       },
                                       {
                                           name: "–ü—Ä–∏—á–∏–Ω–∞",
                                           value: "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: " + profile[member1.id].warns + " –∏–∑ 3"
                                       },
      ]
   }
};
					var warnsucc_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + memberActions.user.tag,
                                         icon_url: client.user.avatarURL
                                       },
                            fields: [
                                       {
                                           name: "–í—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç",
                                           value: message.author.tag
                                       },
                                       {
                                           name: "–ü—Ä–∏—á–∏–Ω–∞",
                                           value: args
                                       },
                                       {
                                           name: "–ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π",
                                           value: profile[member1.id].warns + " –∏–∑ 3"
                                       },
      ]
   }
};
          if(profile[member1.id].warns >=3) {
        memberActions.ban({
          reason: client.user.tag + ': –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π ' + profile[member1.id].warns + ' –∏–∑ 3',
        }).then(() => {
			gchannel1.send(bansucc_embed);
          })} else {    gchannel1.send(warnsucc_embed); }
  var t_log = {
                embed: {
	        color: 0xff8800,
	        author: {
                             name: "Commands Log",
			},
   	        description: "Member " + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
} else {message.channel.send(warnerr1_embed);}
} else {message.channel.send(warnerr2_embed);}
} else {message.channel.send(warnerr1_embed);}
} else {message.channel.send(warnerr3_embed);}
} catch(e) {
if (e.name === "ReferenceError") {
console.error(e)};	
}};
});

client.on('message', message => {
	if(message.channel.type === 'dm') return;
    if (message.content.startsWith(prefix + 'audio pause') || message.content.startsWith(prefix_a + "audio pause") || message.content.startsWith(prefix_b + "audio pause") || message.content.startsWith(prefix_c + "audio pause")) {
					  	  	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	var audleave_embed = {
        embed: {
            color: 0x4400ff,

            author: {
                name: "–ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                icon_url: client.user.avatarURL
            },
  description: "‚è∏ –ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.\n–î–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞ –≤–≤–µ–¥–∏—Ç–µ `xs.audio play"
		}
					};
    message.channel.send(audpause_embed);	
	var server = servers[message.guild.id]
	if (message.guild.voiceConnection) message.guild.voiceConnection.dispatcher.pause();		
}});

client.on('message', message => {
    if(message.channel.type === 'dm') return;
    if(message.content === prefix + "support" || message.content === prefix_a + "support" || message.content === prefix_b + "support" || message.content === prefix_c + "support") {
			  	  	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
		let chid = message.channel.id
	var support_embed = {
        embed: {
            color: 0xff0055,

            author: {
                name: "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞ Dmit",
                icon_url: client.user.avatarURL
            },
  description: "‚ùì xs.support bugreport <–±–∞–≥> - —Å–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ\n  xs.support note <–æ—Ç–∑—ã–≤> - –æ—Ç–∑—ã–≤"
		}
					};
						  client.channels.get("564022728143929370").send(t_log);
    message.channel.send(support_embed);
}}});

   client.on("message", message => {
    if(message.author === client.user) return;
		  	   	  if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + "support bug") || message.content.startsWith(prefix_a + "support bug") || message.content.startsWith(prefix_b + "support bug") || message.content.startsWith(prefix_c + "support bug")) {
			  	  	var t_log = {
   embed: {
color: 0x2255ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
			var supportbug_embed = {
        embed: {
            color: 0xff0055,

            author: {
                name: "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞ Dmit",
                icon_url: client.user.avatarURL
            },
  description: "‚ùì –ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –æ—Ç–≤–µ—Ç–∏—Ç —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞."
		}
					};
    message.channel.send(supportbug_embed);
							  client.channels.get("564022728143929370").send(t_log);

						      let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.tag + " \(" + message.author.id + "\) –Ω–∞–ø–∏—Å–∞–ª: " + message.content + " –Ω–∞ " + message.channel.id)})
   }}});
   
      client.on("message", message => {
    if(message.author === client.user) return;
		  	   	  if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + "support note") || message.content.startsWith(prefix_a + "support note") || message.content.startsWith(prefix_b + "support note") || message.content.startsWith(prefix_c + "support note")) {
			  	  	var t_log = {
   embed: {
color: 0x2255ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
			var supportbug_embed = {
        embed: {
            color: 0xff0055,

            author: {
                name: "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞ Dmit",
                icon_url: client.user.avatarURL
            },
  description: "‚ùì –ê–≤—Ç–æ—Ä –±–æ—Ç–∞ –æ—Ç–≤–µ—Ç–∏—Ç —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞."
		}
					};
											  client.channels.get("564022728143929370").send(t_log);
    message.channel.send(supportbug_embed);

						      let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.tag + " \(" + message.author.id + "\) –Ω–∞–ø–∏—Å–∞–ª: " + message.content + " –Ω–∞ " + message.channel.id)})
	  }}});



   client.on("message", message => {
    if(message.author === client.user) return;
		  	   	  if(message.channel.type === 'dm') return;
    if(message.content === prefix + "help"  || message.content === prefix_a + "help" || message.content === prefix_b + "help" || message.content.startsWith === prefix_c + "help") {
			  	  	var t_log = {
   embed: {
color: 0x007700,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  			  if (message.author.id === '484921597015359488') {
		var help_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: client.user.username,
                icon_url: client.user.avatarURL
            },
  description: "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
                {
                    name: "‚ùì –°–ø—Ä–∞–≤–∫–∞",
                    value: "`about` - –æ –±–æ—Ç–µ XStep\r\n`support` - —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞\r\n`donate` - –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É\r\n`links` - —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã"
                },
                {
                    name: ":tools: –û–ø—Ü–∏–∏",
                    value: "`test` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\r\n`srvlist` - —Å–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞"
                },
                {
                    name: ":hammer: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                    value: "`prune <–∫–æ–ª-–≤–æ>` - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\r\n`ban` - –∑–∞–±–∞–Ω–∏—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`kick` - –≤—ã–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`warn` - –≤—ã–¥–∞—Ç—å –∫–æ–º—É-—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\r\n`avatar` - –º–æ–π –∞–≤–∞—Ç–∞—Ä\r\n`user` - –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\r\n`server` - –æ —Å–µ—Ä–≤–µ—Ä–µ"
                },
                {
                    name: "üë¨ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                    value: "`8ball <–≤–æ–ø—Ä–æ—Å>` - –∏–≥—Ä–∞ \"–®–∞—Ä —Å—É–¥—å–±—ã\"\n`yearprogress` - –≥–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å\n`emoji-ind` - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç–º–æ—Ü–∏–π\r\n`say` - —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞"
                },
                {
                    name: "üéµ –ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                    value: "`audio play <—Å—Å—ã–ª–∫–∞>` - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞\r\n`audio stop` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
             }
            ],
				footer: {
                          text: "–í–µ—Ä—Å–∏—è " + botconfig.version + " (" + botconfig.date + "\). –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ DMITBot –≤–µ—Ä—Å–∏–∏ 3.1.1",
				},
        }
    };
  } else {
			var help_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: client.user.username,
                icon_url: client.user.avatarURL
            },
  description: "–ü—Ä–µ—Ñ–∏–∫—Å: `xs.` `xs!` `—Ö—Å.` `—Ö—Å!`. –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ `<–ø—Ä–µ—Ñ–∏–∫—Å><–∏–º—è –∫–æ–º–∞–Ω–¥—ã>`",
            fields: [
                {
                    name: "‚ùì –°–ø—Ä–∞–≤–∫–∞",
                    value: "`about` - –æ –±–æ—Ç–µ XStep\r\n`support` - —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞\r\n`donate` - –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É\r\n`links` - —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã"
                },
                {
                    name: ":tools: –û–ø—Ü–∏–∏",
                    value: "`test` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞\r\n`srvlist` - —Å–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏–π —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞"
                },
                {
                    name: ":hammer: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
                    value: "`prune <–∫–æ–ª-–≤–æ>` - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\r\n`ban` - –∑–∞–±–∞–Ω–∏—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`kick` - –≤—ã–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ\r\n`warn` - –≤—ã–¥–∞—Ç—å –∫–æ–º—É-—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\r\n`avatar` - –º–æ–π –∞–≤–∞—Ç–∞—Ä\r\n`user` - –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\r\n`server` - –æ —Å–µ—Ä–≤–µ—Ä–µ"
                },
                {
                    name: "üë¨ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                    value: "`8ball <–≤–æ–ø—Ä–æ—Å>` - –∏–≥—Ä–∞ \"–®–∞—Ä —Å—É–¥—å–±—ã\"\n`yearprogress` - –≥–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å\n`emoji-ind` - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç–º–æ—Ü–∏–π\r\n`say` - —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞"
                },
                {
                    name: "üéµ –ê—É–¥–∏–æ–ø–ª–µ–µ—Ä",
                    value: "`audio play <—Å—Å—ã–ª–∫–∞>` - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞\r\n`audio stop` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–∫–∞ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"
             }
            ],
		        footer: {
                          text: "–í–µ—Ä—Å–∏—è " + botconfig.version + " (" + botconfig.date + ", –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è). –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ DMITBot –≤–µ—Ä—Å–∏–∏ 3.1.1",
				},
        }
    };  
  }}
					  client.channels.get("564022728143929370").send(t_log);
message.channel.send(help_embed);
   }})
 
  
client.on('message', function(message) { 
    if (message.content.startsWith(prefix + "prune") || message.content.startsWith(prefix_a + "prune") || message.content.startsWith(prefix_b + "prune") || message.content.startsWith(prefix_c + "prune")) { 
    if(message.channel.type === 'dm') return;
		  	  	var t_log = {
   embed: {
color: 0xff0000,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
						  client.channels.get("564022728143929370").send(t_log);
  let args = message.content.split(" ").slice(1);
		var deletemsg_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
                icon_url: client.user.avatarURL
            },
  description: ":hourglass_flowing_sand: –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π..."
		}
					};
					
			var delmsgerr_o_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–í–Ω–∏–º–∞–Ω–∏–µ!",
                icon_url: client.user.avatarURL
            },
  description: "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –ª—é–±–æ–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 100 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."
		}
					};
					
			var delmsgerr_t_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–û—à–∏–±–∫–∞",
                icon_url: client.user.avatarURL
            },
  description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—Å–∫–æ–ª—å–∫—É –í—ã –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏."
		}
					};

    const deleteCount = parseInt(args[0], 10);
    
    // Ooooh nice, combined conditions. <3
    if(!deleteCount || deleteCount < 2 || deleteCount > 100)
      return message.channel.send(delmsgerr_o_embed);
    
    // So we get our messages, and delete them. Simple enough, right?
	message.channel.send(deletemsg_embed)
    const fetched = message.channel.fetchMessages({limit: deleteCount}).then(function(fetched){ 
        message.channel.bulkDelete(fetched); 
       }, function(err){message.channel.send(delmsgerr_t_embed)})       
}}}); 


client.on('message', message => {
		  	   	  if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + "avatar") || message.content.startsWith(prefix_a + "avatar") || message.content.startsWith(prefix_b + "avatar") || message.content.startsWith(prefix_c + "avatar")) {
			  	  	var t_log = {
   embed: {
color: 0xff8800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}

		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  						  client.channels.get("564022728143929370").send(t_log);
	var myavatar_embed = {
        embed: {
            color: 0xff0000,

            author: {
                name: "–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + message.author.tag,
                icon_url: client.user.avatarURL
            },
  image: {
	       url: message.author.avatarURL
         },
		}
					};
    message.channel.send(myavatar_embed);
    let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send("*–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä " + message.author.tag + " \(" + message.author.id + "\)*")})
	}}});


  client.on('message', message => {
    if (!message.guild) return;
    if (message.content.startsWith(prefix + 'kick') || message.content.startsWith(prefix_a + "kick") || message.content.startsWith(prefix_b + "kick") || message.content.startsWith(prefix_c + "kick")) {
	  if(message.channel.type === 'dm') return;
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	      const user1 = message.mentions.users.first();
          const member = message.guild.member(user1);
		  		var kickerr1_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –±–æ—Ç/–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",

   }
};
		var kickerr2_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –í–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, –ª–∏–±–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –í–∞—à —Å–µ—Ä–≤–µ—Ä.",

   }
};
		var kickerr3_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ `xs.kick <—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ>`",

   }
};
		var kickerr4_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–û—à–∏–±–∫–∞",
                                         icon_url: client.user.avatarURL
                                       },
			                   description: "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑.",

   }
};
      if (user1) {
		  if(message.member.hasPermission('ADMINISTRATOR')) {
        if (member) {
				  		  		var kick_log = {
   embed: {
color: 0xff8800,
author: {
     name: message.author.tag,
     icon_url: client.user.avatarURL
},
    description: user1.tag + " kicked by user " + message.author.tag + " on **" + message.guild.name + "**",
		   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
   }
};
					  		var kicksucc_embed = {
                            embed: {
                               color: 0xff0000,
                               author: {
                                         name: "–ú–æ–¥–µ—Ä–∞—Ü–∏—è | " + user1.tag,
                                         icon_url: client.user.avatarURL
                                       },
                            fields: [
                                       {
                                           name: "üö™ –ö–∏–∫–Ω—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                           value: message.author.tag
                                       },
      ]
   }
};
	  						  client.channels.get("564022728143929370").send(kick_log);
          member.kick('Optional reason that will display in the audit logs').then(() => {
            message.channel.send(kicksucc_embed);
          }).catch(err => {
            message.channel.sendMessage(kickerr4_embed);
            console.error(err);
          });
        } else {
          message.channel.sendMessage(kickerr2_embed);
		  }} else { message.channel.send(kickerr1_embed)}
      } else {
        message.channel.send(kickerr3_embed);
      }
    }
  }});

client.on('message', message => {
    if(message.author === client.user) return;
	  	   	  if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + 'reset')) {
     message.channel.send('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...')
     .then(msg => client.destroy())
     .then(() => client.login(botconfig.token));
    }
});

// Turn bot off (destroy), then turn it back on
function resetBot(channel) {
    // send channel a message that you're resetting bot [optional]

}
  
    client.on('message', message => {
    if(message.author === client.user) return;
	if(message.channel.type === 'dm') return;
    if(message.content.startsWith(prefix + 'links') || message.content.startsWith(prefix_a + "links") || message.content.startsWith(prefix_b + "links") || message.content.startsWith(prefix_c + "links")) {
			  	  	var t_log = {
   embed: {
color: 0x2255ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
		  if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  						  client.channels.get("564022728143929370").send(t_log);
		     var links_embed = {
   embed: {
color: 0xaa88ff,
author: {
     name: "–°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã",
     icon_url: client.user.avatarURL
},
   fields: [
      {
		   name: "YouTube",
           value: "https://youtube.com/DMITPlus"
      },
      {
		   name: "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ",
           value: "https://vk.com/dmitcompgroup"
      },
	  {
		   name: "Twitter",
           value: "https://twitter.com/dmitplus"
      },
      {
		   name: "Telegram",
           value: "https://t.me/dmitcomp"
      },
	  {
		   name: "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞",
		   value: "https://github.com/dmitryevdev/xstepbot"
	  },
	  {
		   name: "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–æ—Ç–∞",
		   value: "https://discordapp.com/oauth2/authorize?client_id=634271325057318943&permissions=8&scope=bot"
	  },
           ]
   }
}
        message.channel.send(links_embed);
	}
	}});


client.on('message', message => {
	if(message.author === client.user) return;
	if(message.content.startsWith(prefix + 'eval')) {
		   let args = message.content.split(" ").slice(1);
		   if(message.author.id !== "484921597015359488") return;
    try {
      var code = args.join(" ");
      var evaled = eval(code);

      if (typeof evaled !== "string")
        evaled = require("util").inspect(evaled);

      message.channel.sendCode("xl", clean(evaled));
    } catch(err) {
      message.channel.sendMessage(`**–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞** \`\`\`xl\n${clean(err)}\n\`\`\``);
    }
	}

});

function clean(text) {


  if (typeof(text) === "string")
    return text.replace(/`/g, "`" + String.fromCharCode(8203)).replace(/@/g, "@" + String.fromCharCode(8203));
  else
      return text;
}

client.on('message', message => {
	if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + 'ads +') || message.content.startsWith(prefix_a + "ads +") || message.content.startsWith(prefix_b + "ads +") || message.content.startsWith(prefix_c + "ads +")) {
	  	  	  	var t_log = {
   embed: {
color: 0xffff00,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	  if (message.author.id === '484921597015359488') {
		      let args = message.content.split(" + ").slice(1);
		      client.channels.get('543748248012193792').send(args.join(" ")).catch(console.error);
	  } else {
		  	  	  						  client.channels.get("564022728143929370").send(t_log);
     var ads_err_embed = {
   embed: {
color: 0xff0000,
author: {
     name: "–û—à–∏–±–∫–∞",
     icon_url: client.user.avatarURL,
},
description: "üö´ –ö–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ, –µ—Å–ª–∏ –í—ã —Å–¥–µ–ª–∞–µ—Ç–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ.\n\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: `xs.donate` + –≤–≤–æ–¥."
   }
};
message.channel.send(ads_err_embed);
	  }
		 }
});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + '8ball') || message.content.startsWith(prefix_a + "8ball") || message.content.startsWith(prefix_b + "8ball") || message.content.startsWith(prefix_c + "8ball")) {
	  	  	  	var t_log = {
   embed: {
color: 0x2200ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
 let answers = ["–î–∞.", "–ù–µ—Ç.", "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ.", "–í–æ–∑–º–æ–∂–Ω–æ.", "–ö–æ–Ω–µ—á–Ω–æ.", "–ù–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å", "–ü–æ—Ö–æ–∂–µ\, –í—ã –∑–∞–¥–∞–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.", "C–æ–º–Ω–µ–≤–∞—é—Å—å.", "–≠—Ç–æ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ.", "–ù–µ –∑–Ω–∞—é, –∫–∞–∫ –≤—ã, –Ω–æ —è –æ—Ç–≤–µ—á–∞—é –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ.", "–î–∞ –∏–ª–∏ –Ω–µ—Ç? –¢–æ, —á—Ç–æ –≤—ã –∑–∞–¥–∞–µ—Ç–µ, —ç—Ç–æ —Å–ª–æ–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å."]; //–º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤
      let rand = Math.floor(Math.random()*answers.length);
      var eightball_embed = {
         embed: {
            color: 0x0088ff,
            author: {
                      name: "–®–∞—Ä —Å—É–¥—å–±—ã",
                      icon_url: client.user.avatarURL
                    },
            fields: [
                       {
                         name: "üí¨ –û—Ç–≤–µ—Ç",
                         value: answers[rand]
                       },
                    ]
                }
                        };
message.channel.send(eightball_embed);
let str = "<@461516811855200256>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.id + " –∏–ª–∏ " + message.author.tag + " —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É \"–®–∞—Ä–∞ —Å—É–¥—å–±—ã\" —Ç–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å: " + message.content)}) 
  }
}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + 'yearprogress') || message.content.startsWith(prefix_a + "yearprogress") || message.content.startsWith(prefix_b + "yearprogress") || message.content.startsWith(prefix_c + "yearprogress")) {
	  	  	  	var t_log = {
   embed: {
color: 0x2200ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {

	  	  	  						  client.channels.get("564022728143929370").send(t_log);
var moscow = new Date()
moscow.getDate()
var d0 = new Date(('January 1, ' + moscow.getFullYear()));
var d1 = moscow
var d2 = new Date(moscow.getFullYear(), moscow.getMonth(), 32);
var d3 = (32 - d2.getDate())
var d4 = ((((d1.getDate() - 1) + (d1.getHours() / 24)) / ( d3 / 100))).toFixed(1);
var d5 = ((d1.getDay() + (d1.getHours() / 24)) / 0.07).toFixed(1)
var d6 = ((d1.getHours() + (d1.getMinutes() / 60)) / 0.24).toFixed(1);
var d1 = moscow
var daysCount = String(Math.round((d1.getTime() - d0.getTime() ) / (1000*60*60*24)));
var yearPercents = String((Math.round(Math.round((d1.getTime() - d0.getTime() ) / (1000*60*60*24))) / 3.65).toFixed(1));
		var yearprogress_embed = {
         embed: {
            color: 0x0088ff,
            author: {
                      name: "üìÖ –ì–æ–¥–æ–≤–∞—è –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å",
                      icon_url: client.user.avatarURL
                    },
            fields: [
                       {
                         name: "–ì–æ–¥",
                         value: '–ü—Ä–æ—à–ª–æ ' + daysCount + ' –¥–Ω. / ' + yearPercents  + '%'
                       },
					   {
                         name: "–ú–µ—Å—è—Ü",
                         value: '–ü—Ä–æ—à–ª–æ ' + moscow.getDate() + ' –¥–Ω. / ' + String(d4)  + '%'
                       },
					   {
                         name: "–ù–µ–¥–µ–ª—è",
                         value: '–ü—Ä–æ—à–ª–æ ' + String(moscow.getDay()) + ' –¥–Ω. / ' + String(d5)  + '%'
                       },
					   {
                         name: "–î–µ–Ω—å",
                         value: strftime("%H:%M", new Date(moscow)) + " (UTC+7) / " + String(d6)  + '%'
                       },
                    ],
					footer: {
                       text: "–°–µ–≥–æ–¥–Ω—è " + strftime('%d.%m.%Y', new Date()),
				    },
                }
                        };
message.channel.send(yearprogress_embed);
  }}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.content.startsWith(prefix + 'server') || message.content.startsWith(prefix_a + "server") || message.content.startsWith(prefix_b + "server") || message.content.startsWith(prefix_c + "server")) {
	  	  	  	var t_log = {
   embed: {
color: 0x3333ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	  if(message.channel.type === 'dm') return;
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  let afkCh = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
	  if(message.guild.afkChannel && message.guild.afkChannel.name) {
	   afkCh = message.guild.afkChannel.name + " (" + message.guild.afkTimeout + ")"
	  } else { 
       afkCh = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" 
      }
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
      let verifLvl = ['–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', '1-–π —É—Ä–æ–≤–µ–Ω—å', '2-–π —É—Ä–æ–≤–µ–Ω—å', '3-–π —É—Ä–æ–≤–µ–Ω—å', '4-–π —É—Ä–æ–≤–µ–Ω—å']
	  message.guild.region = message.guild.region[0].toUpperCase() + message.guild.region.slice(1);
      var si_info = {
    embed: {
        color: 0x8800ff,
        author: {
              name: "–û —Å–µ—Ä–≤–µ—Ä–µ \"" + message.guild.name + "\"",
              icon_url: client.user.avatarURL
                   },
			  thumbnail: {
	        	url: message.guild.iconURL,
	          },
          fields: [
		    {
                 name: "ID",
                 value: message.guild.id
            },
            {
                 name: "üëë –í–ª–∞–¥–µ–ª–µ—Ü",
                 value: message.guild.owner.user.tag
            },
            {
                 name: "üè° –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞",
                 value: message.guild.channels.size + " –∫–∞–Ω–∞–ª–æ–≤ | " + message.guild.roles.size + " —Ä–æ–ª–µ–π | " + message.guild.memberCount + " —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ | " + message.guild.presences.size + " –æ–Ω–ª–∞–π–Ω | " + message.guild.emojis.size + " —ç–º–æ–¥–∂–∏"
            },
            {
                 name: "üîï AFK-–∫–∞–Ω–∞–ª",
                 value: afkCh
            },
            {
                   name: "üèô –†–µ–≥–∏–æ–Ω/–°—Ç—Ä–∞–Ω–∞",
                   value: message.guild.region
            },
            {
                 name: "üõ† –°—Ç–µ–ø–µ–Ω—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                 value: verifLvl[message.guild.verificationLevel]
            },
           ],
		   	   	footer: {
                          text: "–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω " + strftime('%d.%m.%Y', new Date(message.guild.createdTimestamp)),
				},
       }
   };
message.channel.send(si_info);
let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.id + " –∏–ª–∏ " + message.author.tag + " —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ—É –æ —Å–µ—Ä–≤–µ—Ä–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω —Å–∏–¥–∏—Ç. –ù–æ—Ä–º–∞–ª—å–Ω–æ, –∞ —á–µ?")}) 
   }
}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.content.startsWith(prefix + 'user') || message.content.startsWith(prefix_a + "user") || message.content.startsWith(prefix_b + "user") || message.content.startsWith(prefix_c + "user")) {
	  	  	  	var t_log = {
   embed: {
color: 0x3333ff,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
      },
       {
           name: "Channel ID",
           value: message.channel.id
       },
     {
        name: "User ID",
        value: message.author.id
     },
      ]
		}}
	  if(message.channel.type === 'dm') return;
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
      let args = message.content.split(" ").slice(1);
	  let search_un = client.users.find(user => user.username == args)
	  let member = message.guild.member(search_un || message.mentions.users.first() || message.guild.members.get(args[0]))
	  let argsUser = message.guild.member.user || message.author
	  if(message.guild.member(args[0])) {
	  argsUser = message.guild.member(args[0]).user
	  } else {

	  if (member) {
			  argsUser = member.user
	  }
	  else {argsUser = message.author} }	
	  let statuses = {
		  online: "–û–Ω–ª–∞–π–Ω",
		  idle: "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω",
		  dnd: "–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å",
		  offline: "–û—Ñ—Ñ–ª–∞–π–Ω"
	  }
	  let game
	  if (!argsUser.presence.game) game = `${statuses[argsUser.presence.status]}`
	  else if (argsUser.presence.game.type == 0) game = `–ò–≥—Ä–∞–µ—Ç/–†–∞–±–æ—Ç–∞–µ—Ç –≤ **${argsUser.presence.game.name}**`
	  else if (argsUser.presence.game.type == 1) game = `–í–µ–¥–µ—Ç —Å—Ç—Ä–∏–º **${argsUser.presence.game.name}**\n${argsUser.presence.game.url}`
      else if (argsUser.presence.game.type == 2) game = `–°–ª—É—à–∞–µ—Ç –≤ Spotify ${argsUser.presence.game.name}`
      else if (argsUser.presence.game.type == 3) game = `–°–º–æ—Ç—Ä–∏—Ç **${argsUser.presence.game.name}**`
      let day = 1000 * 60 * 60 * 24
	  let month = 30
	  let date1 = new Date()
	  let date2 = new Date(argsUser.createdTimestamp)
	  let date3 = new Date(message.guild.member(argsUser).joinedTimestamp )
	  if (Math.round(Math.abs((date1.getTime() - date3.getTime()) / day)) > 30 && Math.round(Math.abs((date1.getTime() - date2.getTime()) / day)) > 30) {
		  let diff1 = Math.abs((date1.getTime() - date2.getTime()) / day / month)
		  let diff2 = Math.abs((date1.getTime() - date3.getTime()) / day / month)
		        var ui_info = {
    embed: {
        color: 0x8800ff,
        author: {
              name: argsUser.bot ? "[Bot] –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \"" + argsUser.tag + "\"" : "–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \"" + argsUser.tag + "\" " ,
              icon_url: client.user.avatarURL
                   },
			  thumbnail: {
	        	url: argsUser.avatarURL,
	          },
          fields: [
		    {
                 name: "ID",
                 value: argsUser.id
            },
            {
                 name: "üì∂ –°—Ç–∞—Ç—É—Å",
                 value: game
		    },
			{
                 name: "üì´ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                 value: strftime('%d.%m.%Y –≤ %H:%M', new Date(argsUser.createdTimestamp)) + " \(~" + diff1.toFixed(1) + " –º–µ—Å. –Ω–∞–∑–∞–¥\)"
            },
            {
                 name: "üîë –î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ä–≤–µ—Ä",
                 value: strftime('%d.%m.%Y –≤ %H:%M', new Date(message.guild.member(argsUser).joinedTimestamp)) + " \(~" + diff2.toFixed(1) + " –º–µ—Å. –Ω–∞–∑–∞–¥\)"
            },
            {
                 name: "üóí –†–æ–ª–∏",
                 value: message.guild.member(argsUser).roles.filter(r => r.id != message.guild.id).map(role => role.name).join(', ') || "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            },
           ]
       }
	  }
	  message.channel.send(ui_info);
	  } else {
	  let diff1 = Math.round(Math.abs((date1.getTime() - date2.getTime()) / day))
	  let diff2 = Math.round(Math.abs((date1.getTime() - date3.getTime()) / day))
	  
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
      var ui_info = {
    embed: {
        color: 0x8800ff,
        author: {
              name: argsUser.bot ? "[Bot] –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \"" + argsUser.tag + "\"" : "–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \"" + argsUser.tag + "\" ",
              icon_url: client.user.avatarURL
                   },
			  thumbnail: {
	        	url: argsUser.avatarURL,
	          },
          fields: [
		    {
                 name: "ID",
                 value: argsUser.id
            },
            {
                 name: "üì∂ –°—Ç–∞—Ç—É—Å",
                 value: game
            },
            {
                 name: "üì´ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                 value: strftime('%d.%m.%Y –≤ %H:%M', new Date(argsUser.createdTimestamp)) + " \(" + diff1 + " –¥–Ω. –Ω–∞–∑–∞–¥\)"
            },
            {
                 name: "üîë –î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —Å–µ—Ä–≤–µ—Ä",
                 value: strftime('%d.%m.%Y –≤ %H:%M', new Date(message.guild.member(argsUser).joinedTimestamp)) + " \(" + diff2 + " –¥–Ω. –Ω–∞–∑–∞–¥\)"
            },
            {
                 name: "üóí –†–æ–ª–∏",
                 value: message.guild.member(argsUser).roles.filter(r => r.id != message.guild.id).map(role => role.name).join(', ') || "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
            },
           ]
       }
   };
message.channel.send(ui_info);
let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.id + " –∏–ª–∏ " + message.author.tag + " —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ—É –æ —Å–µ—Ä–≤–µ—Ä–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω —Å–∏–¥–∏—Ç. –ù–æ—Ä–º–∞–ª—å–Ω–æ, –∞ —á–µ?")}) 
   }
}}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + "say_private")) {
	if(message.author.id !== "484921597015359488") return;
	let args = message.content.split(" ").slice(1);
    const sayMessage = args.join(" ");
    message.delete().catch(console.log("\n\nError! I can not manage messages.\n\nReason\n" + message.author.tag + ": " + message.content)); 
    // And we get the bot to say the thing: 
    message.channel.send(sayMessage);
                                  }
});

client.on('message', message => {
  if(message.author === client.user) return;
  try {
  if(message.member.hasPermission('ADMINISTRATOR')) return;
  } catch(e) { };
  if(message.content.startsWith("@everyone")) {
	  message.channel.send(message.author + ", –Ω–µ –ø–∏–Ω–∞–π –º–µ–Ω—è, –∑–∞–¥—Ä–∞–ª.")
}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + "say ") || message.content.startsWith(prefix_a + "say ") || message.content.startsWith(prefix_b + "say ") || message.content.startsWith(prefix_c + "say ")) {
	  	  	  	var t_log = {
   embed: {
color: 0x008800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
	let args = message.content.split(" ").slice(1);
    const sayMessage = args.join(" ");
    message.delete().catch(console.log("\n\nError! I can not manage messages.\n\nReason\n" + message.author.tag + ": " + message.content)); 
    // And we get the bot to say the thing: 
    message.channel.send(sayMessage + "\n\n*–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º " + message.author.tag + ".*");
                                  }
});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.content.startsWith('–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º') || message.content.startsWith('–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç') || message.content.startsWith('–ü—Ä–∏–≤–µ—Ç')) {
      message.channel.sendMessage('–û, –ø—Ä–∏–≤–µ—Ç! :)')
  }
});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + 'emoji-ind') || message.content.startsWith(prefix_a + "emoji-ind") || message.content.startsWith(prefix_b + "emoji-ind") || message.content.startsWith(prefix_c + "emoji-ind")) {
	  	  	  	var t_log = {
   embed: {
color: 0x558800,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
 let emoji = [":joy:", ":thinking:", ":grin:", ":slight_smile:", ":grimacing:", ":wink:", ":slight_smile:", ":worried:", ":angry:", ":rage:", ":hushed:", ":scream:", ":cry:", ":sob:", ":zipper_mouth:", ":raised_hands:", ":thumbsup:", ":thumbsdown:", ":frowning2:", ":ok_hand:"]; //–º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤
      let rand = Math.floor(Math.random()*emoji.length);
      var emoji_embed = {
         embed: {
            color: 0x0088ff,
            author: {
                      name: "–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —ç–º–æ—Ü–∏–π",
                      icon_url: client.user.avatarURL
                    },
            fields: [
                       {
                         name: "üî£ –≠–º–æ—Ü–∏—è",
                         value: emoji[rand]
                       },
                    ]
                }
                        };
message.channel.send(emoji_embed);
let str = "<@461516811855200256>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.id + " –∏–ª–∏ " + message.author.tag + " —Å–¥–µ–¥–∞–ª —Ñ–æ–∫—É—Å-–ø–æ–∫—É—Å —Å–æ —Å–ª–æ–≤–∞–º–∏: " + message.content)}) 
  }
}});

client.on("message", message => {
  if(message.author === client.user) return;
  if(message.content.startsWith(prefix + "srvlist") || message.content.startsWith(prefix_a + "srvlist") || message.content.startsWith(prefix_b + "srvlist") || message.content.startsWith(prefix_c + "srvlist")) {
	  var str = "";
	  var membc = '0';
	  var onlinecount = '0';
	  var ar = client.guilds.array();
	  for (let i = 0; i < ar.length; i++){
		  if  (ar[i].memberCount > 100) membc = ar[i].memberCount;
		  if  (ar[i].memberCount < 100 && ar[i].memberCount > 10) membc = ' ' + ar[i].memberCount;
		  if  (ar[i].memberCount < 10) membc = '  ' + ar[i].memberCount;
		  if  (ar[i].memberCount > 100) onlinecount = ar[i].presences.size;
		  if  (ar[i].presences.size < 100 && ar[i].presences.size > 10) onlinecount = ' ' + ar[i].presences.size;
		  if  (ar[i].presences.size < 10) onlinecount = '  ' + ar[i].presences.size;
		  str+=(i + 1) + '. ' + ar[i]+'\n    –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: '+ membc + ' | –û–Ω–ª–∞–π–Ω: ' + onlinecount + ' | –†–µ–≥–∏–æ–Ω: ' + ar[i].region[0].toUpperCase() + message.guild.region.slice(1) + '\r\n';
	  }
	  var srvlist_embed = {
		  embed: {
		color: 0x4422ff,
        author: {
			name: '–°–ø–∏—Å–æ–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ \(' + client.guilds.size + '\)',
			icon_url: message.author.avatarURL,
		},	
	  description: '```' + str + '```',		
	  },
	  }
	 message.channel.send(srvlist_embed);
}});

client.on('message', message => {
  if(message.author === client.user) return;
  if(message.channel.type === 'dm') return;
  if(message.content.startsWith(prefix + 'donate') || message.content.startsWith(prefix_a + "donate") || message.content.startsWith(prefix_b + "donate") || message.content.startsWith(prefix_c + "donate")) {
	  	  	  	var t_log = {
   embed: {
color: 0x00aa00,
author: {
     name: "Commands Log",
},
    description: message.author.tag + " typing `" + message.content + "` on " + message.guild.name + "/" + message.channel.name,
	   fields: [
      {
           name: "Server ID",
           value: message.guild.id
    },
       {
           name: "Channel ID",
           value: message.channel.id
       },
    {
        name: "User ID",
        value: message.author.id
    },
      ]
		}}
	    if(blockid === message.author.id) {

	  message.channel.send(blockmsg_embed)
  } else {
	  	  	  						  client.channels.get("564022728143929370").send(t_log);
	       var donate_embed = {
   embed: {
color: 0x44aa44,
author: {
     name: "–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ",
     icon_url: client.user.avatarURL,
},
description: "üíµ –ó–∞ –¥–æ–Ω–∞—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n1. –ö–æ–º–∞–Ω–¥—É `xs.ads +` –¥–ª—è —Ä–µ–∫–ª–∞–º—ã –í–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!\n\nhttps://donationalerts.com/r/dmitryevpc\n\n–ú–∏–Ω. - 15 RUB \(—Ä.\)/6 UAH \(—É–∫—Ä. –≥—Ä.\)/0.15 USD \(–¥–æ–ª–ª. –°–®–ê\)"
   }
};
      message.channel.sendMessage(donate_embed)
let str = "<@484921597015359488>"; //Just assuming some random tag. 

//removing any sign of < @ ! >... 
//the exclamation symbol comes if the user has a nickname on the server. 
let id = str.replace(/[<@!>]/g, ''); 

client.fetchUser(id) 
    .then(user => {user.send(message.author.id + " –∏–ª–∏ " + message.author.tag + " —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å. ;\)")}) 
  }
}});
  
client.on(`message`, async message => {
	    if(message.author === client.user) return;
    if(message.content.startsWith(prefix + "off")) {
		if(message.author.id !== "484921597015359488") return;
        message.channel.sendMessage("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...");
      await client.destroy()
    }});
